.wrapper
  // ko if:model().data_validation()
  p Warning: Do not use validation dataset results for adding or removing terms.
  // /ko
  header
    span.title(title="This Table shows all terms not in the Current Model, along with their selected statistics.") Candidate Terms
  tf-pager(params="source:source,result:result,current:current_page" title="Choose page from this Table")
  .candidate-wrapper
    table.candidates(data-bind="if:candidates().length" id = "mytable")
      thead
        tr
          th
            div.centering
              div.fixing(title="This column shows the coefficient and multiplicands (product of independent variables) for each candidate term.") Term
          // ko foreach:allstats
          // ko if:!global && sort && selected()
          th
            div.centering
              div.fixing(data-bind="click:function(){$parent.sortby($data)}")
                span(data-bind="text:name, attr: { title:description }")
                // ko if: sorting
                i.fa.fa-sort
                // /ko
          // /ko
          // /ko
      //script
        function sortTable(){
          var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
          table = document.getElementById("mytable");
          switching = true;
          dir = "asc";
          while (switching) {
            switching = false;
            rows = table.rows;
            for (i=1;i<(rows.length-1);i++){
              shouldSwitch = false;
              x = rows[i].getElementsByTagName(id)[n];
              y = rows[i+1].getElementsByTagName(id)[n];
              if (dir == "asc"){
                if (id == 'pt' && $parent.stats[id] <= $parents[1].psig()) \
                  || ((id == 'pF' || id == 'F') && $parent.stats.F > model().cross_or_fit().stats.F) \
                  || ((id == 'SSE') && $parent.stats.SSE < model().cross_or_fit().stats.SSE) \
                  || ((id == 'MSE') && $parent.stats.MSE < model().cross_or_fit().stats.MSE) \
                  || ((id == 't') && $parent.stats.t > model().cross_or_fit().stats.t) \
                  || ((id == 'adjRsq') && $parent.stats.adjRsq > model().cross_or_fit().stats.adjRsq) \
                  || ((id == 'Rsq') && $parent.stats.Rsq > model().cross_or_fit().stats.Rsq) \
                  || ((id == 'BIC') && $parent.stats.BIC < model().cross_or_fit().stats.BIC) \
                  || ((id == 'AIC') && $parent.stats.AIC < model().cross_or_fit().stats.AIC) \
                  || ((id == 'RMSE') && $parent.stats.RMSE < model().cross_or_fit().stats.RMSE) \
                  || ((id == 'MaxAbsErr') && $parent.stats.MaxAbsErr < model().cross_or_fit().stats.MaxAbsErr){
                  shouldSwitch = true;
                  break;
                }
              }else if(dir == "desc"){
                if !((id == 'pt' && $parent.stats[id] <= $parents[1].psig()) \
                  || ((id == 'pF' || id == 'F') && $parent.stats.F > model().cross_or_fit().stats.F) \
                  || ((id == 'SSE') && $parent.stats.SSE < model().cross_or_fit().stats.SSE) \
                  || ((id == 'MSE') && $parent.stats.MSE < model().cross_or_fit().stats.MSE) \
                  || ((id == 't') && $parent.stats.t > model().cross_or_fit().stats.t) \
                  || ((id == 'adjRsq') && $parent.stats.adjRsq > model().cross_or_fit().stats.adjRsq) \
                  || ((id == 'Rsq') && $parent.stats.Rsq > model().cross_or_fit().stats.Rsq) \
                  || ((id == 'BIC') && $parent.stats.BIC < model().cross_or_fit().stats.BIC) \
                  || ((id == 'AIC') && $parent.stats.AIC < model().cross_or_fit().stats.AIC) \
                  || ((id == 'RMSE') && $parent.stats.RMSE < model().cross_or_fit().stats.RMSE) \
                  || ((id == 'MaxAbsErr') && $parent.stats.MaxAbsErr < model().cross_or_fit().stats.MaxAbsErr)){
                  shouldSwitch = true;
                  break;

                }
              }
            }
            if (shouldSwitch) {
              rows[i].parentNode.insertBefore(rows[i+1],rows[i]);
              switching = true;
              switchcount ++;

            }else{
              if (switchcount == 0 && dir == "asc"){
                dir = "desc";
                switching = true;
              }
            }
          }
        }
      tbody
        tr.candidate.current
          td.term
            span.coeff(title='Items in this row are statistics from "Cross" column of Goodness-of-Fit Statistics Table') Current Model
          //- This is the column values
          // ko foreach:allstats
          // ko if:!global && sort && selected()
          td.stat
            // ko ifnot:isNaN($parent.getStat(id))
            span.value(data-bind="num: $parent.getStat(id), fmt: format")
            // /ko
          // /ko
          // /ko
        //- This is the candidate terms
        // ko foreach: result
        tr.candidate(data-bind="click:function(){selected(true);$parent.current_page(0);$parent.updateSensitivity();$parent.updateImportanceRatio();},css:{selected:selected}")
          td.term
            span.coeff
              span(data-bind="num:coeff")
            // ko foreach:term
            // ko if:exp !== 0
            span.name
              span(data-bind="text:name||'x'")

              // ko ifnot:name
              sub
                span(data-bind="text:index")
                span &nbsp;
              // /ko
              // ko if:$parents[1].timeseries()
              sub
                span lag
                span(data-bind="text:lag || 0")
              // /ko
            // ko if:exp !== 1
            sup(data-bind="text:exp")
            // /ko
            // /ko
            // /ko
          // ko foreach:allstats
          // ko if:!global && sort && selected()
          td.stat(data-bind="css: { \
            green: (id == 'pt' && $parent.stats[id] <= $parents[1].psig()) \
                  || ((id == 'pF' || id == 'F') && $parent.stats.F > model().cross_or_fit().stats.F) \
                  || ((id == 'SSE') && $parent.stats.SSE < model().cross_or_fit().stats.SSE) \
                  || ((id == 'MSE') && $parent.stats.MSE < model().cross_or_fit().stats.MSE) \
                  || ((id == 't') && $parent.stats.t > model().cross_or_fit().stats.t) \
                  || ((id == 'adjRsq') && $parent.stats.adjRsq > model().cross_or_fit().stats.adjRsq) \
                  || ((id == 'Rsq') && $parent.stats.Rsq > model().cross_or_fit().stats.Rsq) \
                  || ((id == 'BIC') && $parent.stats.BIC < model().cross_or_fit().stats.BIC) \
                  || ((id == 'AIC') && $parent.stats.AIC < model().cross_or_fit().stats.AIC) \
                  || ((id == 'RMSE') && $parent.stats.RMSE < model().cross_or_fit().stats.RMSE) \
                  || ((id == 'MaxAbsErr') && $parent.stats.MaxAbsErr < model().cross_or_fit().stats.MaxAbsErr) \
            }")
            span.value(data-bind="num:$parent.stats[id], fmt: format")
          // /ko
          // /ko
        // /ko